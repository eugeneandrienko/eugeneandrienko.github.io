*NOTE:* Some links and all footnotes are broken when you view this file from
GitHub. Because GitHub doesn't support OrgMode completely.

There is a main repository for my blog. All articles in it are written in
OrgMode syntax.

=org-jekyll.el= program is used to convert OrgMode articles to HTML and build
the blog.

* File hierarchy description

Articles written as Org Mode files. These files lies in =./articles= catalog
with the structure described below.

Every subcatalog in =./articles= is a separate /category/. For example, we have
next categories:
#+begin_example
articles % tree -L 1
./
├── arms/
├── cycling/
├── it/
├── leatherwork/
└── photo/
#+end_example

In every /category/-catalog there are set of catalogs — one catalog per
article. These article-catalogs should have name in next format:
- =YYYY-MM-DD-article-name= :: Catalog for published article. These articles can
  be previewed with =make serve= command. Its also can be published in the blog.
- =draft-article-name= :: Catalog for draft article. These articles can be
  previewed with =make serve-draft= command. And never be published.
- =hidden-article-name= ::  Catalog for hidden article. This articles will never
  be previewed and published.

For example:
#+begin_example
articles/it % tree -L 1
./
├── 2020-09-09-thinkpad-x220-freebsd/
├── draft-palm-tung-e2-archaeological/
├── draft-palm-tung-e2-ressurection/
└── hidden-wexler-7001/
#+end_example

Inside every catalog there should be set of images and other static files,
related to article. And =article-LANG.org= file with article itself. =LANG= is
two-letters language code. The =ru= or =en= language codes can be used for now.

For example:
#+begin_example
articles/it/draft-palm-tung-e2-ressurection % tree -L 1
./
├── article-ru.org
├── P1283929.jpg
├── P1283931.jpg
├── palm-2031-problem.png
├── palm-menu-hotkeys.png
└── tiktok.png
#+end_example

* How to write articles

Articles written in [[https://orgmode.org/manuals.html][OrgMode syntax]]. You can use all OrgMode directives, either
tables and footnotes.

** File/image include

Files or images should be lie in the same catalog as for =article.org=.

You can insert images in next ways:
1. Without caption:
   #+begin_src org
   ,#+ATTR_HTML: :alt alternative text for accessibility :width 80% :align center
   [[file:filename.jpg]]
   #+end_src
2. With caption:
   #+begin_src org
   ,#+CAPTION: Picture caption
   ,#+ATTR_HTML: :align center :alt alternative text for accessibility
   [[file:filename.jpg]]
   #+end_src

** Footnotes

Link to footnote can be inserted like this:
#+begin_src org
[fn:footnote-id]
#+end_src

The footnote text should be inserted to the end of article, like this:
#+begin_src org
[fn:footnote-id] Footnote text
#+end_src

** Videos

Videos from =/assets/static/= can be inserted in the next way:
#+begin_src org
,#+begin_export html
<div class="video-container" >
    <p align="center">
        <video align="center" style="max-width: 80%" controls>
            <source src="/assets/static/video.webm" type="video/webm">
            Your browser doesn't support video tag.
        </video>
    </p>
</div>
,#+end_export
#+end_src

Online videos, can be embedded as HTML code.

For example:
#+begin_src org
,#+begin_export html
<iframe width="560" height="315"
    src="https://www.youtube-nocookie.com/embed/tELZvA5mvrY?si=3GBkQDe7ialDBnzy"
    title="YouTube video player" frameborder="0"
    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
    referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
<br/>
,#+end_export
#+end_src

* How to build blog

Just eval =org-jekyll.org= file in Emacs, enable =org-jekyll-mode= minor mode and
press =C-c b=.
