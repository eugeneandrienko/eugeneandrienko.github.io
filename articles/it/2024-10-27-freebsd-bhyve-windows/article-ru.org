#+BEGIN_EXPORT html
---
layout: post
title: Запуск Windows в bhyve на FreeBSD
category: it
date: 2024-10-27
lang: ru
comments: false
hidden:
  - related_posts
banner:
  image: /assets/static/freebsd_win.jpg
  opacity: 0.6
summary: Запуск гостевой Windows 7 в bhyve на FreeBSD.
tags: 
---
#+END_EXPORT

В этой заметке собраны все шаги, необходимые для запуска гостевой Windows 7 с
помощью FreeBSD-шного гипервизора bhybe. И подводные камни, с которыми я
столкнулся.

Заметка основана на статье Vermaden: [[https://vermaden.wordpress.com/2023/08/18/freebsd-bhyve-virtualization/][FreeBSD Bhyve Virtualization]]. Прямое
следование инструкциям оттуда дало мне зависающую при старте Windows, без
доступа к сети и без удалённого доступа — поэтому я написал свою инструкцию, с
парой дополнительных шагов.

Всё началось с того, что мне понадобилась одна старая Windows программа —
раньше для такого я бы просто использовал Wine. Но тут внезапно выяснилось,
что он уже не тот, что прежде — в 64-битную систему устанавливается только
64-битная версия, которая не может запустить установщик и на каждый чих просит
установить 32-битный Wine. Это можно сделать +при помощи костылей+ скрипта
=pkg32.sh= от мейнтейнеров пакета, но даже с 32-битной версией всё равно ничего
не работает.

И тут в дело пошли старые «трюки». Раньше я просто устанавливал Windows в
VirtualBox, который вполне сносно и быстро работал при использовании
соответствующего модуля ядра и VirtualBox Guest Addons в гостевой системе. Во
FreeBSD же работать с виртуальными машинами ещё проще — есть «стандартный»
гипервизор [[https://bhyve.org/][bhyve]] и менеджер виртуальных машин [[https://github.com/churchers/vm-bhyve][vm-bhyve]], с заявленной
поддержкой Windows.

* ZFS dataset под виртуальные машины (необязательная часть)

У меня как раз валялся на полке ненужный 2.5" дюймовый жёсткий диск на
500 Гб. Он мне достался уже б/у, к тому же я его разок уронил и потому не
использовал в тех местах, где важна сохранность данных. А тут диск как раз
пришёлся к месту — можно хранить на нём свои «экспериментальные» виртуальные
машины. Винчестер немедленно был подключен третьим диском к моему [[https://eugene-andrienko.com/it/2024/07/07/thinkpad-x220-second-life][Thinkpad
X220]] через OptiBay.

Дальше всё было стандартно. Был создан отдельный zfs pool на этом диске и
отдельный dataset, специально под VM:
#+begin_example
# zpool create hdd /dev/ada1
# zfs create hdd/vms
# zfs set compression=gzip hdd/vms
# zpool status
  pool: hdd
 state: ONLINE
  scan: scrub repaired 0B in 00:00:01 with 0 errors on Sun Oct 27 01:51:43 2024
config:

        NAME        STATE     READ WRITE CKSUM
        hdd         ONLINE       0     0     0
          ada1      ONLINE       0     0     0

errors: No known data errors
# zfs list
NAME                                           USED  AVAIL  REFER  MOUNTPOINT
hdd                                           14.2G   435G    96K  /hdd
hdd/vms                                       14.2G   435G  8.07G  /hdd/vms
#+end_example

Dataset =hdd/vms= нужен будет для vm-bhyve, чтобы он хранил все свои файлы на
этом жёстком диске, а не где-то на двух основных системных дисках.

* Установка bhyve и vm-bhyve

Тут тоже всё достаточно стандартно:
1. Надо установить нужные пакеты:
   #+begin_example
   # pkg install bhyve-firmware vm-bhyve rdesktop
   #+end_example
2. Включить vm-bhyve в =/etc/rc.conf= и передать ему созданный ранее dataset для
   использования:
   #+begin_example
   vm_enable="YES"
   vm_dir="zfs:hdd/vms"
   #+end_example
3. Запустить vm-bhyve через:
   #+begin_example
   # /usr/local/etc/rc.d/vm start
   #+end_example
4. Проинициализировать dataset:
   #+begin_example
   # vm init
   #+end_example

   После этого по пути =/hdd/vms/= должны быть созданы служебные каталоги vm-bhyve:
   #+begin_example
   /hdd/vms % ls -la
   total 12
   drwxr-xr-x  7 root wheel    7B Oct 27 11:42 ./
   drwxr-xr-x  3 root wheel    3B Oct 27 10:52 ../
   drwxr-xr-x  2 root wheel    4B Oct 27 12:43 .config/
   drwxr-xr-x  2 root wheel    2B Oct 27 01:46 .img/
   drwxr-xr-x  2 root wheel    4B Oct 27 11:07 .iso/
   drwxr-xr-x  2 root wheel    4B Oct 27 10:53 .templates/
   #+end_example

* Профиль VM для Windows

По умолчанию в =/hdd/vms/.templates/= лежит только профиль =default=, с которым у
виртуальной машины с Windows не будет ни графики, ни звука, ни достаточной
памяти.

Здесь мне очень помогла статья Vermaden'а: [[https://vermaden.wordpress.com/2023/08/18/freebsd-bhyve-virtualization/][FreeBSD Bhyve
Virtualization]]. Профиль был взят оттуда с небольшими доработками:
- Убрана настройка =xhci_mouse= — с ней уже установленная система зависает на
  этапе загрузки.
- Добавлена дополнительная память.

  #+begin_example
  loader="uefi"
  graphics="yes"
  cpu=2
  memory=6G
  ahci_device_limit="8"
  network0_type="e1000"
  network0_switch="public"
  disk0_type="ahci-hd"
  disk0_name="disk0.img"
  disk0_opts="sectorsize=512"
  utctime="no"
  bhyve_options="-s 8,hda,play=/dev/dsp,rec=/dev/dsp"
  #+end_example

  Этот профиль был сохранён по пути =/hdd/vms/.templates/windows.conf=.

* Настройка сети

Почему-то этот пункт пропускается во многих руководствах — в итоге из хоста
нет доступа к установленной гостевой системе по сети.

Для начала создаётся switch =public= (он же указан выше в профиле =windows=):
#+begin_example
# vm switch create public
#+end_example

Потом ему надо указать адрес:
#+begin_example
# vm switch address public 169.254.0.1/16
#+end_example

Адрес я указывал уже после того, как установил Windows — посмотрел через
=ipconfig=, что система получила по DHCP:
- IP address: 169.254.122.106
- Netmask: 255.255.0.0

И соответственно установил адрес для свитча.

#+begin_example
s vm switch list
NAME    TYPE      IFACE      ADDRESS         PRIVATE  MTU  VLAN  PORTS
public  standard  vm-public  169.254.0.1/16  no       -    -     -
#+end_example

* Установка Windows

Это самая нетривиальная часть. Во многих руководствах пишут, что надо
специальным образом патчить ISO с дистрибутивом, чтобы подсунуть туда нужные
драйвера virtio. К счастью, в имевшейся у меня «сборке от Васяна» то ли уже
были нужные драйвера, то ли они не нужны при установке.

Что интересно, не каждый установочный ISO работает — некоторые просто не
загружаются. От чего это зависит я так и не выяснил. Поэтому на поиск
загружающегося дистрибутива придётся потратить немного времени...

ISO файл нужно поместить по пути =/hdd/vms/.iso/=, после чего он должен
появиться в выводе команды =vm iso=:
#+begin_example
# vm iso
DATASTORE           FILENAME
default             windows_eagle.iso
#+end_example

Перед установкой надо иметь на машине какой-нибудь VNC-клиент — через него
можно будет подключиться к графическому интерфейсу гостевой системы и
произвести установку. Я использовал [[https://wiki.gnome.org/Apps/Vinagre][Vinagre]] из-за его умения правильно
scal'ить рабочую область.

Установка состоит из ряда простых шагов:
1. Создание виртуальной машины с диском на 50 Гб и с профилем =windows=:
   #+begin_example
   # vm create -t windows -s 50G windows
   #+end_example
2. Запуск процедуры установки:
   #+begin_example
   # vm install windows windows_eagle.iso
   Starting windows
   * found guest in /hdd/vms/windows
   * booting...
   #+end_example
3. После п. 2 система будет ожидать подключения VNC-клиента по адресу из
   таблицы:
   #+begin_example
   # vm list
   NAME      DATASTORE  LOADER  CPU  MEMORY  VNC           AUTO  STATE
   windows  default    uefi    2    6G      0.0.0.0:5900  No    Locked (freebsd)
   #+end_example
4. Ну а дальше всё, как обычно :-)
   #+CAPTION: Установка Windows
   #+ATTR_HTML: :align center :alt windows 7 setup
   [[file:windows7_setup.jpg]]

* RDP клиент

Как и Vermaden, я решил, что удобнее всего будет подключаться к системе по
RDP. Слишком уж ценна возможность одновременно пробросить каталоги с хоста в
*уже запущенную* гостевую систему.

Для RDP в Windows надо:
- Задать пароль для аккаунта, который будет подключаться по RDP.
- Включить удалённый доступ к системе:
  #+CAPTION: Удалённый доступ к Windows
  #+ATTR_HTML: :align center :alt windows 7 remote control settings
  [[file:windows7_remote_control.jpg]]
- Посмотреть IP адрес гостевой системы через =ipconfig=:
  #+ATTR_HTML: :align center :alt windows cmd and ipconfig output
  [[file:windows7_ipconfig.jpg]]

  Теперь можно подключиться к гостевой Windows с FreeBSD-хоста при помощи
  следующей команды:
  #+begin_example
  $ rdesktop -u user -p 1234 -P -N -z -g 1600x900 -a 24 -r sound:local -r disk:DWNL=/home/drag0n/downloads/ -r clipboard:PRIMARYCLIPBOARD 169.254.122.106
  #+end_example

  Вместо =user/1234= следует подставить свою пару логин/пароль. Опция =-r disk=
  пробрасывает каталог =/home/drag0n/downloads/= с хоста в гостевую Windows как
  сетевое хранилище =DWNL=. Сюда нужно подставить свои значения или же вовсе
  убрать эту опцию. Опция =-r clipboard= пробрасывает один из clipboard'ов
  X-сервера в гостевую систему и обратно.

  #+CAPTION: Проброшенный каталог с FreeBSD-хоста
  #+ATTR_HTML: :align center :alt Catalog from FreeBSD host as DWNL network storage
  [[file:windows7_dwnl.jpg]]

  Опция =-g 1600x900= в принципе устанавливает желаемое разрешение в окне с
  гостевой VM. Но при использовании tiling wm, окно rdesktop будет растянуто
  до размеров контейнера и разрешение экрана в Windows тоже подстроится под
  это — что в принципе тоже удобно.

* Основные команды для работы с VM

1. Запуск виртуальной машины:
   #+begin_example
   # vm start windows
   Starting windows
   * found guest in /hdd/vms/windows
   * booting...
   #+end_example
2. Остановка виртуальной машины:
   #+begin_example
   shutdown /s /t 0
   #+end_example
   :-)
3. Просмотр списка виртуальных машин:
   #+begin_example
   # vm list
   NAME     DATASTORE  LOADER  CPU  MEMORY  VNC  AUTO  STATE
   windows  default    uefi    2    6G      -    No    Stopped
   #+end_example
4. Выключение виртуальной машины по питанию, на случай если Windows зависнет:
   #+begin_example
   # vm poweroff windows
   Are you sure you want to forcefully poweroff this virtual machine (y/n)?
   #+end_example
